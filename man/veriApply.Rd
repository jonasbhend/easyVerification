% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/veriApply.R
\name{veriApply}
\alias{veriApply}
\title{Apply verification metrics to large datasets}
\usage{
veriApply(verifun, fcst, obs, fcst.ref = NULL, tdim = length(dim(fcst)) - 1,
  ensdim = length(dim(fcst)), prob = NULL, threshold = NULL,
  na.rm = FALSE, ...)
}
\arguments{
\item{verifun}{Name of function to compute verification metric (score, skill
score)}

\item{fcst}{array of forecast values (at least 2-dimensional)}

\item{obs}{array or vector of verifying observations}

\item{fcst.ref}{array of forecast values for the reference forecast (skill
scores only)}

\item{tdim}{index of dimension with the different forecasts}

\item{ensdim}{index of dimension with the different ensemble members}

\item{prob}{probability threshold for category forecasts (see details)}

\item{threshold}{absolute threshold for category forecasts (see details)}

\item{na.rm}{logical, should incomplete forecasts be used?}

\item{...}{additional arguments passed to \code{verifun}}
}
\description{
This wrapper applies verification metrics to arrays of forecast ensembles and
verifying observations. Various formats array-based formats are supported.
Additionally, continuous forecasts (and observations) are transformed to
category forecasts using user-defined absolute thresholds or percentiles of
the long-term climatology (see details).
}
\details{
The probability and absolute thresholds can be supplied in various
  formats. If a vector of values is supplied, the same threshold is applied
  to all forecasts (e.g. lead times, spatial locations). If the thresholds
  are supplied as a matrix, the number of rows has to correspond to the
  number of forecasts (i.e. same length as
  \code{length(fcst)/prod(dim(fcst)[c(tdim, ensdim)])}). Finally, the
  thresholds can also be supplied with the dimensionality corresponding to
  the \code{obs} array. In this case the dimension of the array where in
  \code{obs} the forecast instances are stored holds the thresholds to be
  applied to convert the continuous forecasts to category forecasts.
  Consequently, this dimension can be different from the dimension in
  \code{obs}.
}
\examples{
tm <- toyarray()
f.me <- veriApply('EnsMe', tm$fcst, tm$obs)

## find more examples and instructions in the vignette
\dontrun{
devtools::install_github("MeteoSwiss/easyVerification", build_vignettes=TRUE)
library('easyVerification')
vignette('easyVerification')
}
}
\keyword{utilities}

