% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/veriApply.R
\name{veriApply}
\alias{veriApply}
\title{Apply verification metrics to large datasets}
\usage{
veriApply(verifun, fcst, obs, fcst.ref = NULL, tdim = length(dim(fcst)) - 1,
  ensdim = length(dim(fcst)), prob = NULL, threshold = NULL,
  na.rm = FALSE, parallel = FALSE, maxncpus = 16, ncpus = NULL, ...)
}
\arguments{
\item{verifun}{Name of function to compute verification metric (score, skill
score)}

\item{fcst}{array of forecast values (at least 2-dimensional)}

\item{obs}{array or vector of verifying observations}

\item{fcst.ref}{array of forecast values for the reference forecast (skill
scores only)}

\item{tdim}{index of dimension with the different forecasts}

\item{ensdim}{index of dimension with the different ensemble members}

\item{prob}{probability threshold for category forecasts (see details)}

\item{threshold}{absolute threshold for category forecasts (see details)}

\item{na.rm}{logical, should incomplete forecasts be used?}

\item{parallel}{logical, should pararllel execution of verification be used
(see Details)?}

\item{maxncpus}{upper bound for self-selected number of CPUs}

\item{ncpus}{number of CPUs used in parallel computation, self-selected number
of CPUs is used when \code{is.null(ncpus)} (the default).}

\item{...}{additional arguments passed to \code{verifun}}
}
\description{
This wrapper applies verification metrics to arrays of forecast ensembles and
verifying observations. Various formats array-based formats are supported.
Additionally, continuous forecasts (and observations) are transformed to
category forecasts using user-defined absolute thresholds or percentiles of
the long-term climatology (see details).
}
\details{
The probability and absolute thresholds can be supplied in various
  formats. If a vector of values is supplied, the same threshold is applied
  to all forecasts (e.g. lead times, spatial locations). If the thresholds
  are supplied as a matrix, the number of rows has to correspond to the
  number of forecasts (i.e. same length as
  \code{length(fcst)/prod(dim(fcst)[c(tdim, ensdim)])}). Finally, the
  thresholds can also be supplied with the dimensionality corresponding to
  the \code{obs} array. In this case the dimension of the array where in
  \code{obs} the forecast instances are stored holds the thresholds to be
  applied to convert the continuous forecasts to category forecasts.
  Consequently, this dimension can be different from the dimension in
  \code{obs}.

  Parallel processing is enabled using the \code{\link[parallel]{parallel}}
  package. Prallel verification is using \code{ncpus} \code{FORK} clusters
  or, if \code{ncpus} are not specified, one less than the autodetected number
  of cores. The maximum number of cores used for parallel processing with
  autodetection of the number of available cores can be set with the
  \code{maxncpus} argument.

  Progress bars are available for non-parallel computation of the verification
  metrics. Please note, however, that the progress bar only indicates the time
  of computation needed for the actual verification metrics, input and output
  re-arrangement is not included in the progress bar.
}
\examples{
tm <- toyarray()
f.me <- veriApply('EnsMe', tm$fcst, tm$obs)

## find more examples and instructions in the vignette
\dontrun{
devtools::install_github("MeteoSwiss/easyVerification", build_vignettes=TRUE)
library('easyVerification')
vignette('easyVerification')
}
}
\keyword{utilities}

